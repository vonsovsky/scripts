<?php
class Objects {
  var $obj = array();
  
  var $JDT;
  var $t, $T2, $T3, $T4;
  
  var $epsilon;
  var $nutation;
  
  // pro převody je třeba získat heliocentrické souřadnice Země
  function __construct($JDT) {
    $this->JDT = $JDT;
    $this->t = ($JDT - 2451545.0) / 365250;
    $this->T2 = $this->t * $this->t;
    $this->T3 = $this->T2 * $this->t;
    $this->T4 = $this->T3 * $this->t;
    
    $this->getCorrection();
    $this->earth();
  }
  
  function getCorrection() {
    $this->epsilon = epsilon_mean($this->JDT);
    
    // oprava sklonu osy o nutaci ve sklonu
    $nutation = getNutation($this->JDT);
    $this->epsilon += $nutation[1];
    
    $this->nutation = $nutation[0];

    /*
    $t = ($this->JDT - 2451545.0) / 36525;
    $t2 = $t * $t;
    $t3 = $t2 * $t;
    $t4 = $t3 * $t;

    $Omega = 125.04452 - 1934.136261 * $t + 0.0020708 * $t2 + 0.000002222 * $t3;
    $L = 280.4665 + 36000.7698 * $t;
    $Li = 218.3165 + 481267.8813 * $t;

    // sklon ekliptiky
    $delta_eps = 9.20 * cosd($Omega) + 0.57 * cosd(2 * $L) + 0.10 * cosd(2 * $Li) - 0.09 * cosd(2 * $Omega);
    $this->epsilon = 23.439291111 - 0.013004167 * $t - 0.0000001639 * $t2 + 0.0000005036 * $t3;
    $this->epsilon += $delta_eps / 3600;
    */
  }
  
  function earth() {
    // heliocentrická délka; šířka je rovna 0
    $L0 = 175347046
         + 3341656 * cos(4.6692568 + 6283.0758500 * $this->t)
         + 34894 * cos(4.6261024 + 12566.1517000 * $this->t)
         + 3497 * cos(2.7441178 + 5753.3848849 * $this->t)
         + 3418 * cos(2.8288658 + 3.5231183 * $this->t)
         + 3136 * cos(3.6276704 + 77713.7714681 * $this->t)
         + 2676 * cos(4.4180835 + 7860.4193924 * $this->t)
         + 2343 * cos(6.1351621 + 3930.2096962 * $this->t)
         + 1324 * cos(0.7424634 + 11506.7697698 * $this->t)
         + 1273 * cos(2.0370966 + 529.6909651 * $this->t)
         + 1199 * cos(1.1096295 + 1577.3435424 * $this->t)
         + 990 * cos(5.2326807 + 5884.9268466 * $this->t)
         + 902 * cos(2.0450545 + 26.2983198 * $this->t)
         + 857 * cos(3.5084915 + 398.1490034 * $this->t)
         + 780 * cos(1.1788268 + 5223.6939198 * $this->t)
         + 753 * cos(2.5333905 + 5507.5532387 * $this->t)
         + 505 * cos(4.5829260 + 18849.2275500 * $this->t)
         + 492 * cos(4.2050571 + 775.5226113 * $this->t)
         + 357 * cos(2.9195411 + 0.0673103 * $this->t)
         + 317 * cos(5.8490195 + 11790.6290887 * $this->t)
         + 284 * cos(1.8986924 + 796.2980068 * $this->t)
         + 271 * cos(0.3148626 + 10977.0788047 * $this->t)
         + 243 * cos(0.3448145 + 5486.7778432 * $this->t)
         + 206 * cos(4.8064663 + 2544.3144199 * $this->t)
         + 205 * cos(1.8695377 + 5573.1428014 * $this->t)
         + 202 * cos(2.4576779 + 6069.7767546 * $this->t)
         + 156 * cos(0.8330608 + 213.2990954 * $this->t)
         + 132 * cos(3.4111829 + 2942.4634233 * $this->t)
         + 126 * cos(1.0829546 + 20.7753955 * $this->t)
         + 115 * cos(0.6454491 + 0.9803211 * $this->t)
         + 103 * cos(0.6359985 + 4694.0029547 * $this->t)
         + 102 * cos(0.9756928 + 15720.8387849 * $this->t)
         + 102 * cos(4.2667980 + 7.1135470 * $this->t);
    $L1 = 628331966747
         + 206059 * cos(2.678234558 + 6283.07585 * $this->t)
         + 4303 * cos(2.635122335 + 12566.1517 * $this->t)
         + 425 * cos(1.59046982 + 3.523118349 * $this->t)
         + 119 * cos(5.795557656 + 26.2983198 * $this->t)
         + 109 * cos(2.966310107 + 1577.343542 * $this->t);
    $L2 = 52919
         + 8720 * cos(1.0721 + 6283.0758 * $this->t)
         + 309 * cos(0.867 + 12566.152 * $this->t);
    $L3 = 289 * cos(5.844 + 6283.076 * $this->t);
    $L4 = 114 * cos(3.142 + 0 * $this->t);
    $L = ($L0 + $L1 * $this->t + $L2 * $this->T2 + $L3 * $this->T3 + $L4 * $this->T4) / 1e8;
    $this->obj['earth']['L'] = normalizeAngle(radToDeg($L));
    
    $this->obj['earth']['B'] = 0;
  
    // vzdálenost Země - Slunce               
    $R0 = 100013989
         + 1670700 * cos(3.098463508 + 6283.07585 * $this->t)
         + 13956 * cos(3.055246096 + 12566.1517 * $this->t);
    $R1 = 103019 * cos(1.107490 + 6283.075850 * $this->t);
    $R = ($R0 + $R1 * $this->t) / 1e8;
    $this->obj['earth']['R'] = $R;
  }
  
  function mercury() {
    // heliocentrická délka Merkuru
    $L0 = 440250710
         + 40989415 * cos(1.48302034194 + 26087.9031415742 * $this->t)
         + 5046294 * cos(4.47785489540 + 52175.8062831484 * $this->t)
         + 855347 * cos(1.16520322351 + 78263.7094247225 * $this->t)
         + 165590 * cos(4.11969163181 + 104351.6125662960 * $this->t)
         + 34562 * cos(0.77930765817 + 130439.5157078700 * $this->t)
         + 7583 * cos(3.71348400510 + 156527.4188494450 * $this->t)
         + 3560 * cos(1.51202669419 + 1109.3785520934 * $this->t)
         + 1726 * cos(0.35832239908 + 182615.3219910190 * $this->t)
         + 1803 * cos(4.10333178410 + 5661.3320491522 * $this->t)
         + 1365 * cos(4.59918318745 + 27197.2816936676 * $this->t)
         + 1590 * cos(2.99510417815 + 25028.5212113850 * $this->t)
         + 1017 * cos(0.88031439040 + 31749.2351907264 * $this->t);
    $L1 = 2608814706223
         + 1126008 * cos(6.21703970996 + 26087.9031415742 * $this->t)
         + 303471 * cos(3.05565472363 + 52175.8062831484 * $this->t)
         + 80538 * cos(6.10454743366 + 78263.7094247225 * $this->t)
         + 21245 * cos(2.83531934452 + 104351.6125662960 * $this->t)
         + 5592 * cos(5.82675673328 + 130439.5157078700 * $this->t)
         + 1472 * cos(2.51845458395 + 156527.4188494450 * $this->t);
    $L2 = 53050
         + 16904 * cos(4.69072300649 + 26087.9031415742 * $this->t)
         + 7397 * cos(1.34735624669 + 52175.8062831484 * $this->t)
         + 3018 * cos(4.45643539705 + 78263.7094247225 * $this->t)
         + 1107 * cos(1.26226537554 + 104351.6125662960 * $this->t);
    $L = ($L0 + $L1 * $this->t + $L2 * $this->T2) / 1e8;
    $this->obj['mercury']['L'] = normalizeAngle(radToDeg($L));
  
    // heliocentrická šířka Merkuru
    $B0 = 11737529 * cos(1.98357498767 + 26087.9031415742 * $this->t)
         + 2388077 * cos(5.03738959685 + 52175.8062831484 * $this->t)
         + 1222840 * cos(3.14159265359 + 0.0000000000 * $this->t)
         + 543252 * cos(1.79644363963 + 78263.7094247225 * $this->t)
         + 129779 * cos(4.83232503961 + 104351.6125662960 * $this->t)
         + 31867 * cos(1.58088495667 + 130439.5157078700 * $this->t)
         + 7963 * cos(4.60972126348 + 156527.4188494450 * $this->t)
         + 2014 * cos(1.35324164694 + 182615.3219910190 * $this->t);
    $B1 = 429151 * cos(3.50169780393 + 26087.9031415742 * $this->t)
         + 146234 * cos(3.14159265359)
         + 22675 * cos(0.01515366880 + 52175.8062831484 * $this->t)
         + 10895 * cos(0.48540174006 + 78263.7094247225 * $this->t)
         + 6353 * cos(3.42943919982 + 104351.6125662960 * $this->t)
         + 2496 * cos(0.16051210665 + 130439.5157078700 * $this->t);
    $B2 = 11831 * cos(4.79065585784 + 26087.9031415742 * $this->t)
         + 1914
         + 1045 * cos(1.21216540536 + 52175.8062831484 * $this->t);
    $B = ($B0 + $B1 * $this->t + $B2 * $this->T2) / 1e8;
    $this->obj['mercury']['B'] = radToDeg($B);
  
    // heliocentrická vzdálenost Merkuru
    $R0 = 39528272
         + 7834132 * cos(6.19233722599 + 26087.9031415742 * $this->t)
         + 795526 * cos(2.95989690096 + 52175.8062831484 * $this->t)
         + 121282 * cos(6.01064153805 + 78263.7094247225 * $this->t)
         + 21922 * cos(2.77820093975 + 104351.6125662960 * $this->t);
    $R1 = 217348 * cos(4.65617158663 + 26087.9031415742 * $this->t)
         + 44142 * cos(1.42385543975 + 52175.8062831484 * $this->t)
         + 10094 * cos(4.47466326316 + 78263.7094247225 * $this->t);
    $R = ($R0 + $R1 * $this->t) / 1e8;
    $this->obj['mercury']['R'] = $R;
  }
  
  function venus() {
    // heliocentrická délka Venuše
    $L0 = 317614667
        + 1353968 * cos(5.593133196 + 10213.28555 * $this->t)
        + 89892 * cos(5.306500485 + 20426.57109 * $this->t)
        + 5477 * cos(4.416306525 + 7860.419392 * $this->t)
        + 3456 * cos(2.699644708 + 11790.62909 * $this->t)
        + 2372 * cos(2.993775396 + 3930.209696 * $this->t)
        + 1664 * cos(4.25018935 + 1577.343542 * $this->t)
        + 1438 * cos(4.15745044 + 9683.594581 * $this->t)
        + 1317 * cos(5.186682191 + 26.2983198 * $this->t)
        + 1201 * cos(6.153571153 + 30639.85664 * $this->t);
    $L1 = 1021352943053
        + 95708 * cos(2.46424449 + 10213.28555 * $this->t)
        + 14445 * cos(0.516245647 + 20426.57109 * $this->t);
    $L2 = 54127
        + 3891 * cos(0.3451436 + 10213.28555 * $this->t)
        + 1338 * cos(2.020112861 + 20426.57109 * $this->t);
    $L = ($L0 + $L1 * $this->t + $L2 * $this->T2) / 1e8;
    $this->obj['venus']['L'] = normalizeAngle(radToDeg($L));
    
    // heliocentrická šířka Venuše
    $B0 = 5923638 * cos(0.2670278 + 10213.2855462 * $this->t)
        + 40108 * cos(1.14737 + 20426.57109 * $this->t)
        + 32815 * cos(3.14159)
        + 1011 * cos(1.0895 + 30639.8566 * $this->t);
    $B1 = 513348 * cos(1.803643 + 10213.285546 * $this->t)
        + 4380 * cos(3.3862 + 20426.5711 * $this->t);
    $B2 = 22378 * cos(3.38509 + 10213.28555 * $this->t);
    $B = ($B0 + $B1 * $this->t + $B2 * $this->T2) / 1e8;
    $this->obj['venus']['B'] = radToDeg($B);
    
    // heliocentrická vzdálenost Venuše
    $R0 = 72334821
        + 489824 * cos(4.021518 + 10213.285546 * $this->t);
    $R1 = 34551 * cos(0.89199 + 10213.28555 * $this->t);
    $R = ($R0 + $R1 * $this->t) / 1e8;
    $this->obj['venus']['R'] = $R;
  }
  
  function mars() {
    // heliocentrická délka Marsu
    $L0 = 620347712
         + 18656368 * cos(5.050371003030 + 3340.612426699800 * $this->t)
         + 1108217 * cos(5.400998369580 + 6681.224853399600 * $this->t)
         + 91798 * cos(5.754787451110 + 10021.837280099400 * $this->t)
         + 27745 * cos(5.970495129420 + 3.523118349000 * $this->t)
         + 12316 * cos(0.849560812380 + 2810.921461605200 * $this->t)
         + 10610 * cos(2.939585249730 + 2281.230496510600 * $this->t)
         + 8927 * cos(4.156978459390 + 0.017253652200 * $this->t)
         + 8716 * cos(6.110051597920 + 13362.449706799200 * $this->t)
         + 7775 * cos(3.339686550740 + 5621.842923210400 * $this->t)
         + 6798 * cos(0.364622436260 + 398.149003408200 * $this->t)
         + 4161 * cos(0.228149753300 + 2942.463423291600 * $this->t)
         + 3575 * cos(1.661865401410 + 2544.314419883400 * $this->t)
         + 3075 * cos(0.856965970820 + 191.448266111600 * $this->t)
         + 2938 * cos(6.078937114080 + 0.067310302800 * $this->t)
         + 2628 * cos(0.648061435700 + 3337.089308350800 * $this->t)
         + 2580 * cos(0.029967061970 + 3344.135545048800 * $this->t)
         + 2389 * cos(5.038964013490 + 796.298006816400 * $this->t)
         + 1799 * cos(0.656340268440 + 529.690965094600 * $this->t)
         + 1546 * cos(2.915796333920 + 1751.539531416000 * $this->t)
         + 1528 * cos(1.149793062280 + 6151.533888305000 * $this->t)
         + 1286 * cos(3.067959246260 + 2146.165416475200 * $this->t)
         + 1264 * cos(3.622750922310 + 5092.151958115800 * $this->t)
         + 1025 * cos(3.693342935550 + 8962.455349910200 * $this->t);
    $L1 = 334085627474
         + 1458227 * cos(3.60426053609 + 3340.61242669980 * $this->t)
         + 164901 * cos(3.92631250962 + 6681.22485339960 * $this->t)
         + 19963 * cos(4.26594061030 + 10021.83728009940 * $this->t)
         + 3452 * cos(4.73210386365 + 3.52311834900 * $this->t)
         + 2485 * cos(4.61277567318 + 13362.44970679920 * $this->t);
    $L2 = 58016 * cos(2.04979463279 + 3340.61242669980 * $this->t)
         + 54188
         + 13908 * cos(2.45742359888 + 6681.22485339960 * $this->t)
         + 2465 * cos(2.80000020929 + 10021.83728009940 * $this->t);
    $L3 = 1482 * cos(0.44434694876 + 3340.61242669980 * $this->t);
    $L = ($L0 + $L1 * $this->t + $L2 * $this->T2 + $L3 * $this->T3) / 1e8;
    $this->obj['mars']['L'] = normalizeAngle(radToDeg($L));
  
    // heliocentrická šířka Marsu
    $B0 = 3197135 * cos(3.76832042432 + 3340.61242669980 * $this->t)
         + 298033 * cos(4.10616996243 + 6681.22485339960 * $this->t)
         + 289105
         + 31366 * cos(4.44651052853 + 10021.83728009940 * $this->t)
         + 3484 * cos(4.78812547889 + 13362.44970679920 * $this->t);
    $B1 = 350069 * cos(5.36847836211 + 3340.61242669980 * $this->t)
         + 14116 * cos(3.14159265359 + 0.00000000000 * $this->t)
         + 9671 * cos(5.47877786506 + 6681.22485339960 * $this->t)
         + 1472 * cos(3.20205766795 + 10021.83728009940 * $this->t);
    $B2 = 16727 * cos(0.60221392419 + 3340.61242669980 * $this->t)
         + 4987 * cos(3.14159265359 + 0.00000000000 * $this->t);
    $B = ($B0 + $B1 * $this->t + $B2 * $this->T2) / 1e8;
    $this->obj['mars']['B'] = radToDeg($B);
  
    // heliocentrická vzdálenost Marsu
    $R0 = 153033488
         + 14184953 * cos(3.47971283519 + 3340.61242669980 * $this->t)
         + 660776 * cos(3.81783442097 + 6681.22485339960 * $this->t)
         + 46179 * cos(4.15595316284 + 10021.83728009940 * $this->t)
         + 8110 * cos(5.55958460165 + 2810.92146160520 * $this->t)
         + 7485 * cos(1.77238998069 + 5621.84292321040 * $this->t)
         + 5523 * cos(1.36436318880 + 2281.23049651060 * $this->t)
         + 3825 * cos(4.49407182408 + 13362.44970679920 * $this->t)
         + 2484 * cos(4.92545577893 + 2942.46342329160 * $this->t)
         + 2307 * cos(0.09081742493 + 2544.31441988340 * $this->t)
         + 1999 * cos(5.36059605227 + 3337.08930835080 * $this->t)
         + 1960 * cos(4.74249386323 + 3344.13554504880 * $this->t)
         + 1167 * cos(2.11261501155 + 5092.15195811580 * $this->t)
         + 1103 * cos(5.00908264160 + 398.14900340820 * $this->t);
    $R1 = 1107433 * cos(2.03250524950 + 3340.61242669980 * $this->t)
         + 103176 * cos(2.37071845682 + 6681.22485339960 * $this->t)
         + 12877
         + 10816 * cos(2.70888093803 + 10021.83728009940 * $this->t)
         + 1195 * cos(3.04702182503 + 13362.44970679920 * $this->t);
    $R2 = 44242 * cos(0.47930603943 + 3340.61242669980 * $this->t)
         + 8138 * cos(0.86998398093 + 6681.22485339960 * $this->t)
         + 1275 * cos(1.22594050809 + 10021.83728009940 * $this->t);
    $R3 = 1113 * cos(5.14987350142 + 3340.61242669980 * $this->t);
    $R = ($R0 + $R1 * $this->t + $R2 * $this->T2 + $R3 * $this->T3) / 1e8;
    $this->obj['mars']['R'] = $R;
  }
  
  function jupiter() {
    // heliocentrická délka Jupiteru
    $L0 = 59954691
         + 9695899 * cos(5.061917931 + 529.6909651 * $this->t)
         + 573610 * cos(1.44406206 + 7.113547001 * $this->t)
         + 306389 * cos(5.4173473 + 1059.38193 * $this->t)
         + 97178 * cos(4.142647088 + 632.7837393 * $this->t)
         + 72903 * cos(3.640429093 + 522.5774181 * $this->t)
         + 64264 * cos(3.411451852 + 103.0927742 * $this->t)
         + 39806 * cos(2.293767449 + 419.4846439 * $this->t)
         + 38858 * cos(1.272317249 + 316.3918697 * $this->t)
         + 27965 * cos(1.784545895 + 536.8045121 * $this->t)
         + 13590 * cos(5.774810316 + 1589.072895 * $this->t)
         + 8769 * cos(3.630003244 + 949.175609 * $this->t)
         + 8246 * cos(3.582279617 + 206.1855484 * $this->t)
         + 7368 * cos(5.081011256 + 735.8765135 * $this->t)
         + 6263 * cos(0.024976437 + 213.2990954 * $this->t)
         + 6114 * cos(4.513195317 + 1162.474704 * $this->t)
         + 5305 * cos(4.186250535 + 1052.268383 * $this->t)
         + 5305 * cos(1.306712368 + 14.227094 * $this->t)
         + 4905 * cos(1.320846317 + 110.2063212 * $this->t)
         + 4647 * cos(4.699581095 + 3.932153263 * $this->t)
         + 3045 * cos(4.316759603 + 426.5981909 * $this->t)
         + 2610 * cos(1.566675949 + 846.0828348 * $this->t)
         + 2028 * cos(1.063765474 + 3.181393738 * $this->t)
         + 1921 * cos(0.971689288 + 639.8972863 * $this->t)
         + 1765 * cos(2.141480778 + 1066.495477 * $this->t)
         + 1723 * cos(3.880360089 + 1265.567479 * $this->t)
         + 1633 * cos(3.582010898 + 515.4638711 * $this->t)
         + 1432 * cos(4.296836903 + 625.6701923 * $this->t);
    $L1 = 52993480757
         + 489741 * cos(4.220666899 + 529.6909651 * $this->t)
         + 228919 * cos(6.02647464 + 7.113547001 * $this->t)
         + 27655 * cos(4.572659568 + 1059.38193 * $this->t)
         + 20721 * cos(5.459389363 + 522.5774181 * $this->t)
         + 12106 * cos(0.16985765 + 536.8045121 * $this->t)
         + 6068 * cos(4.42419502 + 103.0927742 * $this->t)
         + 5434 * cos(3.984783826 + 419.4846439 * $this->t)
         + 4238 * cos(5.890093513 + 14.227094 * $this->t)
         + 2212 * cos(5.267714466 + 206.1855484 * $this->t)
         + 1746 * cos(4.926693785 + 1589.072895 * $this->t)
         + 1296 * cos(5.551327651 + 3.181393738 * $this->t)
         + 1173 * cos(5.856473044 + 1052.268383 * $this->t)
         + 1163 * cos(0.514508953 + 3.932153263 * $this->t)
         + 1099 * cos(5.307049816 + 515.4638711 * $this->t)
         + 1007 * cos(0.464783986 + 735.8765135 * $this->t)
         + 1004 * cos(3.150403018 + 426.5981909 * $this->t);
    $L2 = 47234 * cos(4.321483236 + 7.113547001 * $this->t)
         + 38966
         + 30629 * cos(2.930214402 + 529.6909651 * $this->t)
         + 3189 * cos(1.055046156 + 522.5774181 * $this->t)
         + 2729 * cos(4.845454814 + 536.8045121 * $this->t)
         + 2723 * cos(3.414115266 + 1059.38193 * $this->t)
         + 1721 * cos(4.187343852 + 14.227094 * $this->t);
    $L3 = 6502 * cos(2.598628805 + 7.113547001 * $this->t)
         + 1357 * cos(1.346358864 + 529.6909651 * $this->t);
    $L = ($L0 + $L1 * $this->t + $L2 * $this->T2 + $L3 * $this->T3) / 1e8;
    $this->obj['jupiter']['L'] = normalizeAngle(radToDeg($L));
  
    // heliocentrická šířka Jupiteru
    $B0 = 2268616 * cos(3.558526067 + 529.6909651 * $this->t)
         + 110090
         + 109972 * cos(3.908093474 + 1059.38193 * $this->t)
         + 8101 * cos(3.605095734 + 522.5774181 * $this->t)
         + 6438 * cos(0.306271214 + 536.8045121 * $this->t)
         + 6044 * cos(4.258831088 + 1589.072895 * $this->t)
         + 1107 * cos(2.985344219 + 1162.474704 * $this->t);
    $B1 = 177352 * cos(5.701664885 + 529.6909651 * $this->t)
         + 3230 * cos(5.779416193 + 1059.38193 * $this->t)
         + 3081 * cos(5.474642965 + 522.5774181 * $this->t)
         + 2212 * cos(4.734774802 + 536.8045121 * $this->t)
         + 1694 * cos(3.141592654 + 0 * $this->t);
    $B2 = 8094 * cos(1.463228437 + 529.6909651 * $this->t);
    $B = ($B0 + $B1 * $this->t + $B2 * $this->T2) / 1e8;
    $this->obj['jupiter']['B'] = radToDeg($B);
  
    // heliocentrická vzdálenost Jupiteru
    $R0 = 520887429
         + 25209327 * cos(3.4910864 + 529.6909651 * $this->t)
         + 610600 * cos(3.841153656 + 1059.38193 * $this->t)
         + 282029 * cos(2.574198799 + 632.7837393 * $this->t)
         + 187647 * cos(2.075903801 + 522.5774181 * $this->t)
         + 86793 * cos(0.710010906 + 419.4846439 * $this->t)
         + 72063 * cos(0.214656947 + 536.8045121 * $this->t)
         + 65517 * cos(5.979958508 + 316.3918697 * $this->t)
         + 30135 * cos(2.161320584 + 949.175609 * $this->t)
         + 29135 * cos(1.677592437 + 103.0927742 * $this->t)
         + 23947 * cos(0.274578549 + 7.113547001 * $this->t)
         + 23453 * cos(3.540231473 + 735.8765135 * $this->t)
         + 22284 * cos(4.193627735 + 1589.072895 * $this->t)
         + 13033 * cos(2.960430557 + 1162.474704 * $this->t)
         + 12749 * cos(2.715501029 + 1052.268383 * $this->t);
    $R1 = 1271802 * cos(2.649375111 + 529.6909651 * $this->t)
         + 61662 * cos(3.00076251 + 1059.38193 * $this->t)
         + 53444 * cos(3.897176442 + 522.5774181 * $this->t)
         + 41390 * cos(0 + 0 * $this->t)
         + 31185 * cos(4.882766635 + 536.8045121 * $this->t)
         + 11847 * cos(2.413295882 + 419.4846439 * $this->t);
    $R2 = 79645 * cos(1.358658966 + 529.6909651 * $this->t);
    $R = ($R0 + $R1 * $this->t + $R2 * $this->T2) / 1e8;
    $this->obj['jupiter']['R'] = $R;
  }
  
  function saturn() {
    // heliocentrická délka Saturnu
    $L0 = 87401354
         + 11107660 * cos(3.96205090194 + 213.2990954380 * $this->t)
         + 1414151 * cos(4.58581515873 + 7.1135470008 * $this->t)
         + 398379 * cos(0.52112025957 + 206.1855484372 * $this->t)
         + 350769 * cos(3.30329903015 + 426.5981908760 * $this->t)
         + 206816 * cos(0.24658366938 + 103.0927742186 * $this->t)
         + 79271 * cos(3.84007078530 + 220.4126424388 * $this->t)
         + 23990 * cos(4.66976934860 + 110.2063212194 * $this->t)
         + 16574 * cos(0.43719123541 + 419.4846438752 * $this->t)
         + 14907 * cos(5.76903283845 + 316.3918696566 * $this->t)
         + 15820 * cos(0.93808953760 + 632.7837393132 * $this->t)
         + 14610 * cos(1.56518573691 + 3.9321532631 * $this->t)
         + 13160 * cos(4.44891180176 + 14.2270940016 * $this->t)
         + 15054 * cos(2.71670027883 + 639.8972863140 * $this->t)
         + 13005 * cos(5.98119067061 + 11.0457002639 * $this->t)
         + 10725 * cos(3.12939596466 + 202.2533951741 * $this->t)
         + 5863 * cos(0.23657028777 + 529.6909650946 * $this->t)
         + 5228 * cos(4.20783162380 + 3.1813937377 * $this->t)
         + 6126 * cos(1.76328499656 + 277.0349937414 * $this->t)
         + 5020 * cos(3.17787919533 + 433.7117378768 * $this->t)
         + 4593 * cos(0.61976424374 + 199.0720014364 * $this->t)
         + 4006 * cos(2.24479893937 + 63.7358983034 * $this->t)
         + 2954 * cos(0.98280385206 + 95.9792272178 * $this->t)
         + 3874 * cos(3.22282692566 + 138.5174968707 * $this->t)
         + 2461 * cos(2.03163631205 + 735.8765135318 * $this->t)
         + 3269 * cos(0.77491895787 + 949.1756089698 * $this->t)
         + 1758 * cos(3.26580514774 + 522.5774180938 * $this->t)
         + 1640 * cos(5.50504966218 + 846.0828347512 * $this->t)
         + 1391 * cos(4.02331978116 + 323.5054166574 * $this->t)
         + 1581 * cos(4.37266314120 + 309.2783226558 * $this->t)
         + 1124 * cos(2.83726793572 + 415.5524906121 * $this->t)
         + 1017 * cos(3.71698151814 + 227.5261894396 * $this->t);
    $L1 = 21354295596
         + 1296855 * cos(1.82820544701 + 213.2990954380 * $this->t)
         + 564348 * cos(2.88500136429 + 7.1135470008 * $this->t)
         + 98323 * cos(1.08070061328 + 426.5981908760 * $this->t)
         + 107679 * cos(2.27769911872 + 206.1855484372 * $this->t)
         + 40255 * cos(2.04128257090 + 220.4126424388 * $this->t)
         + 19942 * cos(1.27954662736 + 103.0927742186 * $this->t)
         + 10512 * cos(2.74880392800 + 14.2270940016 * $this->t)
         + 6939 * cos(0.40493079985 + 639.8972863140 * $this->t)
         + 4803 * cos(2.44194097666 + 419.4846438752 * $this->t)
         + 4056 * cos(2.92166618776 + 110.2063212194 * $this->t)
         + 3769 * cos(3.64965631460 + 3.9321532631 * $this->t)
         + 3385 * cos(2.41694251653 + 3.1813937377 * $this->t)
         + 3302 * cos(1.26256486715 + 433.7117378768 * $this->t)
         + 3071 * cos(2.32739317750 + 199.0720014364 * $this->t)
         + 1953 * cos(3.56394683300 + 11.0457002639 * $this->t)
         + 1249 * cos(2.62803737519 + 95.9792272178 * $this->t);
    $L2 = 116441 * cos(1.17987850633 + 7.1135470008 * $this->t)
         + 91921 * cos(0.07425261094 + 213.2990954380 * $this->t)
         + 90592
         + 15277 * cos(4.06492007503 + 206.1855484372 * $this->t)
         + 10631 * cos(0.25778277414 + 220.4126424388 * $this->t)
         + 10605 * cos(5.40963595885 + 426.5981908760 * $this->t)
         + 4265 * cos(1.04595556630 + 14.2270940016 * $this->t)
         + 1216 * cos(2.91860042123 + 103.0927742186 * $this->t)
         + 1165 * cos(4.60942128971 + 639.8972863140 * $this->t)
         + 1082 * cos(5.69130351670 + 433.7117378768 * $this->t)
         + 1020 * cos(0.63369182642 + 3.1813937377 * $this->t)
         + 1045 * cos(4.04206453611 + 199.0720014364 * $this->t);
    $L3 = 16039 * cos(5.73945377424 + 7.1135470008 * $this->t)
         + 4250 * cos(4.58539675603 + 213.2990954380 * $this->t)
         + 1907 * cos(4.76082050205 + 220.4126424388 * $this->t)
         + 1466 * cos(5.91326678323 + 206.1855484372 * $this->t)
         + 1162 * cos(5.61973132428 + 14.2270940016 * $this->t)
         + 1067 * cos(3.60816533142 + 426.5981908760 * $this->t);
    $L4 = 1662 * cos(3.99826248978 + 7.1135470008 * $this->t);
    $L = ($L0 + $L1 * $this->t + $L2 * $this->T2 + $L3 * $this->T3 + $L4 * $this->T4) / 1e8;
    $this->obj['saturn']['L'] = normalizeAngle(radToDeg($L));
  
    // heliocentric latitude
    $B0 = 4330678 * cos(3.60284428399 + 213.2990954380 * $this->t)
         + 240348 * cos(2.85238489390 + 426.5981908760 * $this->t)
         + 84746
         + 30863 * cos(3.48441504465 + 220.4126424388 * $this->t)
         + 34116 * cos(0.57297307844 + 206.1855484372 * $this->t)
         + 14734 * cos(2.11846597870 + 639.8972863140 * $this->t)
         + 9917 * cos(5.79003189405 + 419.4846438752 * $this->t)
         + 6994 * cos(4.73604689179 + 7.1135470008 * $this->t)
         + 4808 * cos(5.43305315602 + 316.3918696566 * $this->t)
         + 4788 * cos(4.96512927420 + 110.2063212194 * $this->t)
         + 3432 * cos(2.73255752123 + 433.7117378768 * $this->t)
         + 1506 * cos(6.01304536144 + 103.0927742186 * $this->t)
         + 1060 * cos(5.63099292414 + 529.6909650946 * $this->t);
    $B1 = 397555 * cos(5.33289992556 + 213.2990954380 * $this->t)
         + 49479 * cos(3.14159265359 + 0.0000000000 * $this->t)
         + 18572 * cos(6.09919206378 + 426.5981908760 * $this->t)
         + 14801 * cos(2.30586060520 + 206.1855484372 * $this->t)
         + 9644 * cos(1.69674660120 + 220.4126424388 * $this->t)
         + 3757 * cos(1.25429514018 + 419.4846438752 * $this->t)
         + 2717 * cos(5.91166664787 + 639.8972863140 * $this->t)
         + 1455 * cos(0.85161616532 + 433.7117378768 * $this->t)
         + 1291 * cos(2.91770857090 + 7.1135470008 * $this->t);
    $B2 = 20630 * cos(0.50482422817 + 213.2990954380 * $this->t)
         + 3720 * cos(3.99833475829 + 206.1855484372 * $this->t)
         + 1627 * cos(6.18189939500 + 220.4126424388 * $this->t)
         + 1346;
    $B = ($B0 + $B1 * $this->t + $B2 * $this->T2) / 1e8;
    $this->obj['saturn']['B'] = radToDeg($B);
  
    // heliocentrická vzdálenost Saturnu
    $R0 = 955758136
         + 52921382 * cos(2.39226219733 + 213.2990954380 * $this->t)
         + 1873680 * cos(5.23549605091 + 206.1855484372 * $this->t)
         + 1464664 * cos(1.64763045468 + 426.5981908760 * $this->t)
         + 821891 * cos(5.93520025371 + 316.3918696566 * $this->t)
         + 547507 * cos(5.01532628454 + 103.0927742186 * $this->t)
         + 371684 * cos(2.27114833428 + 220.4126424388 * $this->t)
         + 361778 * cos(3.13904303264 + 7.1135470008 * $this->t)
         + 140618 * cos(5.70406652991 + 632.7837393132 * $this->t)
         + 108975 * cos(3.29313595577 + 110.2063212194 * $this->t)
         + 69007 * cos(5.94099622447 + 419.4846438752 * $this->t)
         + 61053 * cos(0.94037761156 + 639.8972863140 * $this->t)
         + 48913 * cos(1.55733388472 + 202.2533951741 * $this->t)
         + 34144 * cos(0.19518550682 + 277.0349937414 * $this->t)
         + 32402 * cos(5.47084606947 + 949.1756089698 * $this->t)
         + 20937 * cos(0.46349163993 + 735.8765135318 * $this->t)
         + 20839 * cos(1.52102590640 + 433.7117378768 * $this->t)
         + 20747 * cos(5.33255667599 + 199.0720014364 * $this->t)
         + 15298 * cos(3.05943652881 + 529.6909650946 * $this->t)
         + 14296 * cos(2.60433537909 + 323.5054166574 * $this->t)
         + 11993 * cos(5.98051421881 + 846.0828347512 * $this->t)
         + 11380 * cos(1.73105746566 + 522.5774180938 * $this->t)
         + 12884 * cos(1.64892310393 + 138.5174968707 * $this->t);
    $R1 = 6182981 * cos(0.25843515034 + 213.2990954380 * $this->t)
         + 506578 * cos(0.71114650941 + 206.1855484372 * $this->t)
         + 341394 * cos(5.79635773960 + 426.5981908760 * $this->t)
         + 188491 * cos(0.47215719444 + 220.4126424388 * $this->t)
         + 186262 * cos(3.14159265359 + 0.0000000000 * $this->t)
         + 143891 * cos(1.40744864239 + 7.1135470008 * $this->t)
         + 49621 * cos(6.01744469580 + 103.0927742186 * $this->t)
         + 20928 * cos(5.09245654470 + 639.8972863140 * $this->t)
         + 19953 * cos(1.17560125007 + 419.4846438752 * $this->t)
         + 18840 * cos(1.60819563173 + 110.2063212194 * $this->t)
         + 12893 * cos(5.94330258435 + 433.7117378768 * $this->t)
         + 13877 * cos(0.75886204364 + 199.0720014364 * $this->t);
    $R2 = 436902 * cos(4.78671673044 + 213.2990954380 * $this->t)
         + 71923 * cos(2.50069994874 + 206.1855484372 * $this->t)
         + 49767 * cos(4.97168150870 + 220.4126424388 * $this->t)
         + 43221 * cos(3.86940443794 + 426.5981908760 * $this->t)
         + 29646 * cos(5.96310264282 + 7.1135470008 * $this->t);
    $R3 = 20315 * cos(3.02186626038 + 213.2990954380 * $this->t);
    $R = ($R0 + $R1 * $this->t + $R2 * $this->T2 + $R3 * $this->T3) / 1e8;
    $this->obj['saturn']['R'] = $R;
  }
  
  function uranus() {
    // heliocentrická délka Uranu
    $L0 = 548129294
         + 9260408 * cos(0.8910642 + 74.7815986 * $this->t)
         + 1504248 * cos(3.6271926 + 1.4844727 * $this->t)
         + 365982 * cos(1.899622 + 73.297126 * $this->t)
         + 272328 * cos(3.358237 + 149.563197 * $this->t)
         + 70328 * cos(5.39254 + 63.73590 * $this->t)
         + 68893 * cos(6.09292 + 76.26607 * $this->t)
         + 61999 * cos(2.26952 + 2.96895 * $this->t)
         + 61951 * cos(2.85099 + 11.04570 * $this->t)
         + 26469 * cos(3.14152 + 71.81265 * $this->t)
         + 25711 * cos(6.11380 + 454.90937 * $this->t)
         + 21079 * cos(4.36059 + 148.07872 * $this->t)
         + 17819 * cos(1.74437 + 36.64856 * $this->t)
         + 14613 * cos(4.73732 + 3.93215 * $this->t)
         + 11163 * cos(5.82682 + 224.34480 * $this->t)
         + 10998 * cos(0.48865 + 138.51750 * $this->t)
         + 9527 * cos(2.9552 + 35.1641 * $this->t)
         + 7546 * cos(5.2363 + 109.9457 * $this->t)
         + 4220 * cos(3.2333 + 70.8494 * $this->t)
         + 4052 * cos(2.2775 + 151.0477 * $this->t)
         + 3490 * cos(5.4831 + 146.5943 * $this->t)
         + 3355 * cos(1.0655 + 4.4534 * $this->t)
         + 3144 * cos(4.7520 + 77.7505 * $this->t)
         + 2927 * cos(4.6290 + 9.5612 * $this->t)
         + 2922 * cos(5.3524 + 85.8273 * $this->t)
         + 2273 * cos(4.3660 + 70.3282 * $this->t)
         + 2149 * cos(0.6075 + 38.1330 * $this->t)
         + 2051 * cos(1.5177 + 0.1119 * $this->t)
         + 1992 * cos(4.9244 + 277.0350 * $this->t)
         + 1667 * cos(3.6274 + 380.1278 * $this->t)
         + 1533 * cos(2.5859 + 52.6902 * $this->t)
         + 1376 * cos(2.0428 + 65.2204 * $this->t)
         + 1372 * cos(4.1964 + 111.4302 * $this->t)
         + 1284 * cos(3.1135 + 202.2534 * $this->t)
         + 1282 * cos(0.5427 + 222.8603 * $this->t)
         + 1244 * cos(0.9161 + 2.4477 * $this->t)
         + 1221 * cos(0.1990 + 108.4612 * $this->t)
         + 1151 * cos(4.1790 + 33.6796 * $this->t)
         + 1150 * cos(0.9334 + 3.1814 * $this->t)
         + 1090 * cos(1.7750 + 12.5302 * $this->t)
         + 1072 * cos(0.2356 + 62.2514 * $this->t);
    $L1 = 7502543122
         + 154458 * cos(5.242017 + 74.781599 * $this->t)
         + 24456 * cos(1.71256 + 1.48447 * $this->t)
         + 9258 * cos(0.4284 + 11.0457 * $this->t)
         + 8266 * cos(1.5022 + 63.7359 * $this->t)
         + 7842 * cos(1.3198 + 149.5632 * $this->t)
         + 3899 * cos(0.4648 + 3.9322 * $this->t)
         + 2284 * cos(4.1737 + 76.2661 * $this->t)
         + 1927 * cos(0.5301 + 2.9690 * $this->t)
         + 1233 * cos(1.5863 + 70.8494 * $this->t);
    $L2 = 53033
         + 2358 * cos(2.2601 + 74.7816 * $this->t);
    $L = ($L0 + $L1 * $this->t + $L2 * $this->T2) / 1e8;
    $this->obj['uranus']['L'] = normalizeAngle(radToDeg($L));
  
    // heliocentrická šířka Uranu
    $B0 = 1346278 * cos(2.6187781 + 74.7815986 * $this->t)
         + 62341 * cos(5.08111 + 149.56320 * $this->t)
         + 61601 * cos(3.14159 + 0. * $this->t)
         + 9964 * cos(1.6160 + 76.2661 * $this->t)
         + 9926 * cos(0.5763 + 73.2971 * $this->t)
         + 3259 * cos(1.2612 + 224.3448 * $this->t)
         + 2972 * cos(2.2437 + 1.4845 * $this->t)
         + 2010 * cos(6.0555 + 148.0787 * $this->t)
         + 1522 * cos(0.2796 + 63.7359 * $this->t);
    $B1 = 206366 * cos(4.123943 + 74.781599 * $this->t)
         + 8563 * cos(0.3382 + 149.5632 * $this->t)
         + 1726 * cos(2.1219 + 73.2971 * $this->t)
         + 1374
         + 1369 * cos(3.0686 + 76.2661 * $this->t);
    $B2 = 9212 * cos(5.8004 + 74.7816 * $this->t);
    $B = ($B0 + $B1 * $this->t + $B2 * $this->T2) / 1e8;
    $this->obj['uranus']['B'] = radToDeg($B);
  
    // heliocentrická vzdálenost Uranu
    $R0 = 1921264848
         + 88784984 * cos(5.60377527 + 74.78159857 * $this->t)
         + 3440836 * cos(0.3283610 + 73.2971259 * $this->t)
         + 2055653 * cos(1.7829517 + 149.5631971 * $this->t)
         + 649322 * cos(4.522473 + 76.266071 * $this->t)
         + 602248 * cos(3.860038 + 63.735898 * $this->t)
         + 496404 * cos(1.401399 + 454.909367 * $this->t)
         + 338526 * cos(1.580027 + 138.517497 * $this->t)
         + 243508 * cos(1.570866 + 71.812653 * $this->t)
         + 190522 * cos(1.998094 + 1.484473 * $this->t)
         + 161858 * cos(2.791379 + 148.078724 * $this->t)
         + 143706 * cos(1.383686 + 11.045700 * $this->t)
         + 93192 * cos(0.17437 + 36.64856 * $this->t)
         + 89806 * cos(3.66105 + 109.94569 * $this->t)
         + 71424 * cos(4.24509 + 224.34480 * $this->t)
         + 46677 * cos(1.39977 + 35.16409 * $this->t)
         + 39026 * cos(3.36235 + 277.03499 * $this->t)
         + 39010 * cos(1.66971 + 70.84945 * $this->t)
         + 36755 * cos(3.88649 + 146.59425 * $this->t)
         + 30349 * cos(0.70100 + 151.04767 * $this->t)
         + 29156 * cos(3.18056 + 77.75054 * $this->t)
         + 25786 * cos(3.78538 + 85.82730 * $this->t)
         + 25620 * cos(5.25656 + 380.12777 * $this->t)
         + 22637 * cos(0.72519 + 529.69097 * $this->t)
         + 20473 * cos(2.79640 + 70.32818 * $this->t)
         + 20472 * cos(1.55589 + 202.25340 * $this->t)
         + 17901 * cos(0.55455 + 2.96895 * $this->t)
         + 15503 * cos(5.35405 + 38.13304 * $this->t)
         + 14702 * cos(4.90434 + 108.46122 * $this->t)
         + 12897 * cos(2.62154 + 111.43016 * $this->t)
         + 12328 * cos(5.96039 + 127.47180 * $this->t)
         + 11959 * cos(1.75044 + 984.60033 * $this->t)
         + 11853 * cos(0.99343 + 52.69020 * $this->t)
         + 11696 * cos(3.29826 + 3.93215 * $this->t)
         + 11495 * cos(0.43774 + 65.22037 * $this->t)
         + 10793 * cos(1.42105 + 213.29910 * $this->t);
    $R1 = 1479896 * cos(3.6720571 + 74.7815986 * $this->t)
         + 71212 * cos(6.22601 + 63.73590 * $this->t)
         + 68627 * cos(6.13411 + 149.56320 * $this->t)
         + 24060 * cos(3.14159 + 0. * $this->t)
         + 21468 * cos(2.60177 + 76.26607 * $this->t)
         + 20857 * cos(5.24625 + 11.04570 * $this->t)
         + 11405 * cos(0.01848 + 70.84945 * $this->t);
    $R2 = 22440 * cos(0.69953 + 74.78160 * $this->t);
    $R = ($R0 + $R1 * $this->t + $R2 * $this->T2) / 1e8;
    $this->obj['uranus']['R'] = $R;
  }                        
  
  function neptune() {
    // heliocentrická délka Neptunu
    $L0 = 531188633
         + 1798476 * cos(2.9010127 + 38.1330356 * $this->t)
         + 1019728 * cos(0.4858092 + 1.4844727 * $this->t)
         + 124532 * cos(4.830081 + 36.648563 * $this->t)
         + 42064 * cos(5.41055 + 2.96895 * $this->t)
         + 37715 * cos(6.09222 + 35.16409 * $this->t)
         + 33785 * cos(1.24489 + 76.26607 * $this->t)
         + 16483 * cos(0.00008 + 491.55793 * $this->t)
         + 9199 * cos(4.9375 + 39.6175 * $this->t)
         + 8994 * cos(0.2746 + 175.1661 * $this->t)
         + 4216 * cos(1.9871 + 73.2971 * $this->t)
         + 3365 * cos(1.0359 + 33.6796 * $this->t)
         + 2285 * cos(4.2061 + 4.4534 * $this->t)
         + 1434 * cos(2.7834 + 74.7816 * $this->t);
    $L1 = 3837687717
         + 16604 * cos(4.86319 + 1.48447 * $this->t)
         + 15807 * cos(2.27923 + 38.13304 * $this->t)
         + 3335 * cos(3.6820 + 76.2661 * $this->t)
         + 1306 * cos(3.6732 + 2.9689 * $this->t);
    $L2 = 53893;
    $L = ($L0 + $L1 * $this->t + $L2 * $this->T2) / 1e8;
    $this->obj['neptune']['L'] = normalizeAngle(radToDeg($L));
  
    // heliocentrická šířka Neptunu
    $B0 = 3088623 * cos(1.4410437 + 38.1330356 * $this->t)
         + 27780 * cos(5.91272 + 76.26607 * $this->t)
         + 27624 * cos(0. + 0. * $this->t)
         + 15448 * cos(3.50877 + 39.61751 * $this->t)
         + 15355 * cos(2.52124 + 36.64856 * $this->t)
         + 2000 * cos(1.5100 + 74.7816 * $this->t)
         + 1968 * cos(4.3778 + 1.4845 * $this->t)
         + 1015 * cos(3.2156 + 35.1641 * $this->t);
    $B1 = 227279 * cos(3.807931 + 38.133036 * $this->t)
         + 1803 * cos(1.9758 + 76.2661 * $this->t)
         + 1433 * cos(3.1416 + 0. * $this->t)
         + 1386 * cos(4.8256 + 36.6486 * $this->t)
         + 1073 * cos(6.0805 + 39.6175 * $this->t);
    $B2 = 9691 * cos(5.5712 + 38.1330 * $this->t);
    $B = ($B0 + $B1 * $this->t + $B2 * $this->T2) / 1e8;
    $this->obj['neptune']['B'] = radToDeg($B);
  
    // heliocentrická vzdálenost Neptunu
    $R0 = 3007013206
         + 27062259 * cos(1.32999459 + 38.13303564 * $this->t)
         + 1691764 * cos(3.2518614 + 36.6485629 * $this->t)
         + 807831 * cos(5.185928 + 1.484473 * $this->t)
         + 537761 * cos(4.521139 + 35.164090 * $this->t)
         + 495726 * cos(1.571057 + 491.557929 * $this->t)
         + 274572 * cos(1.845523 + 175.166060 * $this->t)
         + 135134 * cos(3.372206 + 39.617508 * $this->t)
         + 121802 * cos(5.797544 + 76.266071 * $this->t)
         + 100895 * cos(0.377027 + 73.297126 * $this->t)
         + 69792 * cos(3.79617 + 2.96895 * $this->t)
         + 46688 * cos(5.74938 + 33.67962 * $this->t)
         + 24594 * cos(0.50802 + 109.94569 * $this->t)
         + 16939 * cos(1.59422 + 71.81265 * $this->t)
         + 14230 * cos(1.07786 + 74.78160 * $this->t)
         + 12012 * cos(1.92062 + 1021.24889 * $this->t);
    $R1 = 236339 * cos(0.704980 + 38.133036 * $this->t)
         + 13220 * cos(3.32015 + 1.48447 * $this->t);
    $R = ($R0 + $R1 * $this->t) / 1e8;
    $this->obj['neptune']['R'] = $R;
  }
  
  function moon() {
    $t = ($this->JDT - 2451545.0) / 36525;
    $t2 = $t * $t;
    $t3 = $t2 * $t;
    $t4 = $t3 * $t;
  
    $Li = normalizeAngle(218.3164477 + 481267.88123421 * $t - 0.0015786 * $t2 + 0.000008319 * $t3 - 0.0000000153 * $t4);
    $D = normalizeAngle(297.8501921 + 445267.1114034 * $t - 0.0018819 * $t2 + 0.0000018319 * $t3 - 0.0000000088 * $t4);
    $M = normalizeAngle(357.5291092 + 35999.0502909 * $t - 0.0001536 * $t2 + 0.0000000408 * $t3);
    $Mi = normalizeAngle(134.9633964 + 477198.8675055 * $t + 0.0087414 * $t2 + 0.000014347 * $t3 - 0.00000006797 * $t4);
    $this->obj["moon"]["D"] = $D; $this->obj["moon"]["M"] = $M; $this->obj["moon"]["Mi"] = $Mi;
    $F = normalizeAngle(93.2720950 + 483202.0175233 * $t - 0.0036539 * $t2 - 0.0000002836 * $t3 - 0.00000000116 * $t4);
    $A1 = normalizeAngle(119.75 + 131.849 * $t);
    $A2 = normalizeAngle(53.09 + 479264.290 * $t);
    $A3 = normalizeAngle(313.45 + 481266.484 * $t);
    $E = 1 - 0.002516 * $t - 0.0000074 * $t2;
    
    $l = array(
         array(0, 0, 1, 0, 6288774, -20905355),
         array(2, 0, -1, 0, 1274027, -3699111),
         array(2, 0, 0, 0, 658314, -2955968),
         array(0, 0, 2, 0, 213618, -569925),
         array(0, 1, 0, 0, -185116, 48888),
         array(0, 0, 0, 2, -114332, -3149),
         array(2, 0, -2, 0, 58793, 246158),
         array(2, -1, -1, 0, 57066, -152138),
         array(2, 0, 1, 0, 53322, -170733),
         array(2, -1, 0, 0, 45758, -204586),
         array(0, 1, -1, 0, -40923, -129620),
         array(1, 0, 0, 0, -34720, 108743),
         array(0, 1, 1, 0, -30383, 104755),
         array(2, 0, 0, -2, 15327, 10321),
         array(0, 0, 1, 2, -12528, 0),
         array(0, 0, 1, -2, 10980, 79661),
         array(4, 0, -1, 0, 10675, -34782),
         array(0, 0, 3, 0, 10034, -23210),
         array(4, 0, -2, 0, 8548, -21636),
         array(2, 1, -1, 0, -7888, 24208),
         array(2, 1, 0, 0, -6766, 30824),
         array(1, 0, -1, 0, -5163, -8379),
         array(1, 1, 0, 0, 4987, -16675),
         array(2, -1, 1, 0, 4036, -12831),
         array(2, 0, 2, 0, 3994, -10445),
         array(4, 0, 0, 0, 3861, -11650),
         array(2, 0, -3, 0, 3665, 14403),
         array(0, 1, -2, 0, -2689, -7003),
         array(2, 0, -1, 2, -2602, 0),
         array(2, -1, -2, 0, 2390, 10056),
         array(1, 0, 1, 0, -2348, 6322),
         array(2, -2, 0, 0, 2236, -9884),
         array(0, 1, 2, 0, -2120, 5751),
         array(0, 2, 0, 0, -2069, 0),
         array(2, -2, -1, 0, 2048, -4950),
         array(2, 0, 1, -2, -1773, 4130),
         array(2, 0, 0, 2, -1595, 0),
         array(4, -1, -1, 0, 1215, -3958),
         array(0, 0, 2, 2, -1110, 0)
         );
    $sl = 0;
    $sr = 0;
    foreach ($l as $i => $a)
    {
         $sl += $a[4] * $E * sind($a[0] * $D + $a[1] * $M + $a[2] * $Mi + $a[3] * $F);
         $sr += $a[5] * $E * cosd($a[0] * $D + $a[1] * $M + $a[2] * $Mi + $a[3] * $F);
    }
    $sl += 3958 * sind($A1) + 1962 * sind($Li - $F) + 318 * sind($A2);
    $this->obj["moon"]["L"] = $Li + $sl / 1000000;
    $this->obj["moon"]["R"] = 385000 + $sr / 1000;
    
    $b = array(
         array(0, 0, 0, 1, 5128122),
         array(0, 0, 1, 1, 280602),
         array(0, 0, 1, -1, 277693),
         array(2, 0, 0, -1, 173237),
         array(2, 0, -1, 1, 55413),
         array(2, 0, -1, -1, 46271),
         array(2, 0, 0, 1, 32573),
         array(0, 0, 2, 1, 17198),
         array(2, 0, 1, -1, 9266),
         array(0, 0, 2, -1, 8822),
         array(2, -1, 0, -1, 8216),
         array(2, 0, -2, -1, 4324),
         array(2, 0, 1, 1, 4200),
         array(2, 1, 0, -1, -3359),
         array(2, -1, -1, 1, 2463),
         array(2, -1, 0, 1, 2211),
         array(2, -1, -1, -1, 2065),
         array(0, 1, -1, -1, -1870),
         array(4, 0, -1, -1, 1828),
         array(0, 1, 0, 1, -1794),
         array(0, 0, 0, 3, -1749),
         array(0, 1, -1, 1, -1565),
         array(1, 0, 0, 1, -1491),
         array(0, 1, 1, 1, -1475),
         array(0, 1, 1, -1, -1410),
         array(0, 1, 0, -1, -1344),
         array(1, 0, 0, -1, -1335),
         array(0, 0, 3, 1, 1107),
         array(4, 0, 0, -1, 1021)
         );
    $sb = 0;
    foreach ($b as $i => $a)
         $sb += $a[4] * $E * sind($a[0] * $D + $a[1] * $M + $a[2] * $Mi + $a[3] * $F);
    $sb += -2235 * sind($Li) + 382 * sind($A3)
          + 175 * sind($A1 - $F) + 175 * sind($A1 + $F)
          + 127 * sind($Li - $Mi) - 115 * sind($Li + $Mi);            
    $this->obj["moon"]["B"] = $sb / 1000000;

    $pos = $this->eclipticalToEquatorial($this->obj["moon"]["L"], $this->obj["moon"]["B"]);
    $this->obj['moon']['ra'] = $pos[0];
    $this->obj['moon']['dec'] = $pos[1];
  }
  
  function sun() {
    $aberation = -20.4898 / $this->obj['earth']['R'] / 3600;

    $this->obj["sun"]["L"] = normalizeAngle($this->obj['earth']['L'] + 180 + $this->nutation + $aberation);
    $this->obj["sun"]["B"] = -$this->obj['earth']['B'];

    // po převodech zůstane pole{rektascenze, deklinace}
    $pos = $this->eclipticalToEquatorial($this->obj["sun"]["L"], 0);
    $this->obj['sun']['ra'] = $pos[0];
    $this->obj['sun']['dec'] = $pos[1];
  }

  // Z. Pokorný
  // Tahle funkce by měla určovat přesnost fáze na 2 minuty
  function moonPhase() {
    if (!isset($this->obj["moon"])) {
      $this->moon();
      $this->sun();
    }
    
    $X = $this->JDT + 0.5;
    $Z = floor($X);
    $Y = floor(($Z-1867216.25) / 36524.25);
    $A = $Z + 1 + $Y - floor($Y / 4);
    $B = $A + 1524;
    $C = floor(($B - 122.1) / 365.25);
    $D = floor(365.25 * $C);
    $G = floor(($B - $D) / 30.6001);
    $month = ($G < 13.5) ? ($G - 1) : ($G - 13);

    // najde se interval, kam spadá aktuální datum a vrátí se poměr mezi nimi zvýšený o fázi
    $dates = array(0, $this->calcPhase(-0.5, $month));
    $phase = 0;
    for ($i = -0.25; $i <= 1.5; $i += 0.25) {
      $dates[0] = $dates[1];
      $dates[1] = $this->calcPhase($i, $month);
      
      if ($dates[0] <= $this->JDT && $dates[1] >= $this->JDT) {
        $phase = ($this->JDT - $dates[0]) / ($dates[1] - $dates[0]) * 0.25 + $i - 0.5;
        if ($phase < 0) $phase++;
        if ($phase > 1) $phase--;
      }
    }

    return $phase;
  }
  
  function calcPhase($phase, $month) {
    $Y = 2012 + ($month - 1) / 12;
    //$Y = 1987 + 0.25;
    $k = round(12.3685 * ($Y - 1900)) + $phase;
    //echo 12.3685 * ($Y - 1900).' ';
    //echo $k.'<br />';
    $T1 = $k / 1236.85;
    $JD = 2415020.75933 + 29.53058868 * $k + 0.0001178 * pow($T1, 2) - 0.000000155 * pow($T1, 3) +
          0.00033 * sind(166.56 + 132.87 * $T1 - 0.009173 * pow($T1, 2));
    
    $Ms = normalizeAngle(359.2242 + 29.10535608 * $k - 0.0000333 * pow($T1, 2) - 0.00000347 * pow($T1, 3));
    $Mm = normalizeAngle(306.0253 + 385.81691806 * $k + 0.0107306 * pow($T1, 2) + 0.00001236 * pow($T1, 3));
    $um = normalizeAngle(21.2964 + 390.67050646 * $k - 0.0016528 * pow($T1, 2) - 0.00000239 * pow($T1, 3));
    
    $corr = 0;
    if ($phase == 0 || $phase == 0.5) {
      $corr = (0.1734 - 0.000393 * $T1) * sind($Ms)
            - 0.4068 * sind($Mm)
            + 0.0161 * sind(2 * $Mm)
            + 0.0104 * sind(2 * $um)
            - 0.0074 * sind($Ms - $Mm)
            - 0.0051 * sind($Ms + $Mm)
            + 0.0021 * sind(2 * $Ms)
            + 0.0010 * sind(2 * $um - $Mm)
            - 0.0006 * sind(2 * $um + $Mm)
            + 0.0005 * sind($Ms + 2 * $Mm)
            - 0.0004 * sind(3 * $Mm)
            + 0.0004 * sind(2 * $um + $Ms)
            - 0.0004 * sind(2 * $um - $Ms);
    }
    if ($phase == 0.25 || $phase == 0.75) {
      $corr = (0.1721 - 0.0004 * $T1) * sind($Ms)
            - 0.6280 * sind($Mm)
            - 0.0119 * sind($Ms + $Mm)
            + 0.0089 * sind(2 * $Mm)
            + 0.0079 * sind(2 * $um)
            - 0.0047 * sind($Ms - $Mm)
            + 0.0021 * sind(2 * $um - $Mm)
            + 0.0021 * sind(2 * $Ms)
            - 0.0006 * sind(2 * $um + $Mm)
            - 0.0004 * sind(3 * $Mm)
            - 0.0004 * sind(2 * $um - $Ms)
            + 0.0004 * sind($Ms - 2 * $Mm)
            + 0.0003 * sind(2 * $um + $Ms)
            + 0.0003 * sind($Ms + 2 * $Mm)
            - 0.0003 * sind(2 * $Ms + $Mm);
    }
    if ($phase == 0.25)
      $corr = 0.0028 - 0.0004 * cosd($Ms) + 0.0003 * cosd($Mm);
    if ($phase == 0.75)
      $corr = -0.0028 + 0.0004 * cosd($Ms) - 0.0003 * cosd($Mm);
      
    return $JD + $corr;
  }

  // Earth heliocentric latitude = 0
  function heliocentricToEcliptical($L, $B, $R) {
    $x = $R * cosd($B) * cosd($L) - $this->obj['earth']['R'] * cosd($this->obj['earth']['L']);
    $y = $R * cosd($B) * sind($L) - $this->obj['earth']['R'] * sind($this->obj['earth']['L']);
    $z = $R * sind($B);
    
    $lambda = normalizeAngle(atand2($y, $x));
    $beta = atand2($z, sqrt(pow($x, 2) + pow($y, 2)));
    $delta = sqrt(pow($x, 2) + pow($y, 2) + pow($z, 2));

    return array($lambda, $beta, $delta);
  }

  function eclipticalToEquatorial($lambda, $beta) {
    $alfa = normalizeAngle(atand2(sind($lambda) * cosd($this->epsilon) - tand($beta) * sind($this->epsilon), cosd($lambda)));
    $delta = asind(sind($beta) * cosd($this->epsilon) + cosd($beta) * sind($this->epsilon) * sind($lambda));
    
    return array($alfa, $delta);   
  }
}
?>